# Config file for a simple simulation of the core functions: Confocal, counter,
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']
    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:
    nicard_6343_instreamer:
        module.Class: 'ni_x_series_in_streamer.NIXSeriesInStreamer'
        device_name: 'Dev3'
        digital_sources:  # optional
            - 'PFI1'
        analog_sources:  # optional
            - 'ai0'
            - 'ai1'
            - 'ai2'
            - 'ai3'
        # external_sample_clock_source: 'PFI0'  # optional
        # external_sample_clock_frequency: 1000  # optional
        adc_voltage_range: [-10, 10]  # optional
        max_channel_samples_buffer: 10000000  # optional
        read_write_timeout: 10  # optional
    nicard_6343:
        module.Class: 'national_instruments_x_series.NationalInstrumentsXSeries'
        photon_sources:
            - '/Dev3/PFI1'
         #   - '/Dev3/PFI1'
        #    - '/Dev3/PFI9'
        clock_channel: '/Dev3/Ctr0'
        default_clock_frequency: 100 # optional, in Hz
        counter_channels:
            - '/Dev3/Ctr1'
        counter_ai_channels:
            - '/Dev3/AI0'
            - '/Dev3/AI3'
            - '/Dev3/AI1'
        counter_voltage_range: [-10, 10]
        default_scanner_clock_frequency: 100 # optional, in Hz
        scanner_clock_channel: '/Dev3/Ctr2'
        pixel_clock_channel: '/Dev3/PFI6'
        scanner_ao_channels:
            - '/Dev3/AO0'#x
            - '/Dev3/AO1'#y
            - '/Dev3/AO2'  #z  #removed
            - '/Dev3/AO3'    #removed
        scanner_ai_channels:
            - '/Dev3/AI1'
            - '/Dev3/AI3'
        scanner_counter_channels:
            - '/Dev3/Ctr3'
        scanner_voltage_ranges:
            - [0, 10]
            - [0, 10]
            - [0, 10]#removed
            - [-10, 10]#removed
        scanner_position_ranges:
            - [0e-6, 200e-6]
            - [0e-6, 200e-6]
            - [-100e-6, 100e-6]
            - [0, 10]

        odmr_trigger_channel: '/Dev3/PFI7'

        gate_in_channel: '/Dev3/PFI9'
        default_samples_number: 50
        max_counts: 3e7
        read_write_timeout: 10
        counting_edge_rising: True
    mw_source_smbv:
        module.Class: 'microwave.mw_source_smbv_100B.MicrowaveSmbv'
        gpib_address: 'TCPIP::169.254.154.2::INSTR'#'GPIB::28::INSTR'
        gpib_address: 'TCPIP::169.254.154.2::INSTR'
      #  gpib_timeout: 10s
    pulsestreamer:
        module.Class: 'swabian_instruments.pulse_streamer.PulseStreamer'
        ip_address: '169.254.8.2'
        laser_channel: 'd_ch4'
        uw_x_channel: 'd_ch3'
        uw_y_channel: 'd_ch4'
    thorlabs_camera:
        module.Class: 'camera.thorlabs.thorlabs_DCx.CameraThorlabs'
        default_exposure: 0.1
        default_gain: 1.0
        id_camera: 0 # if more tha one camera is present
    fastcounter_NI:
        module.Class: 'NIfastcounter.NIFastCounter'

    myspectrometer:
        module.Class: 'spectrometer.oceanoptics_spectrometer.OceanOptics'
        spectrometer_serial: 'USB4C03076' #insert here the right serial number.
    magnetdummy:
        module.Class: 'magnet.magnet_dummy.MagnetDummy'
    gatedcounter:
        module.Class: 'gated_counter.gated_counter_gui.GatedCounterGui'
        connect:
            gatedcounterlogic1: 'gatedcounterlogic'
            traceanalysislogic1: 'trace_analysis_logic'
    swabian_instrument:
        module.Class: 'swabian_instruments.streamer.Streamer'
        instrument_ip: '169.254.8.2'
    smf100a:
        module.Class: 'microwave.mw_smf100a.MicrowaveSMF100a'
        instrument_ip: 'TCPIP::169.254.154.2::INSTR'
    madcity_piezo:
        module.Class: 'piezo.madcity_piezo.Mpiezo'
    ni_card_acquisition:
        module.Class: 'ni_card_acquisition.NICard_Acquisition'
        device_name: 'Dev3'
        device_name_ao: 'Dev1'
        sampling_frequency: 500000
        analog_inputs:
            - 'ai3'
        analog_outputs:
            - 'ao0'
            - 'ao1'
            - 'ao2'
        trigger_terminal: 'PFI0'
logic:
    time_series_reader_logic:
        module.Class: 'time_series_reader_logic.TimeSeriesReaderLogic'
        max_frame_rate: 10  # optional (10Hz by default)
        calc_digital_freq: True  # optional (True by default)
        connect:
            _streamer_con: nicard_6343_instreamer
            _savelogic_con: 'savelogic'
    fitlogic:
        module.Class: 'fit_logic.FitLogic'
        #additional_fit_methods_path: 'C:\\Custom_dir'  # optional, can also be lists on several folders
    savelogic:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: 'Data/'
        log_into_daily_directory: True
        save_pdf: True
        save_png: True    
    sequencegeneratorlogic:
        module.Class: 'pulsed.sequence_generator_logic.SequenceGeneratorLogic'
        #additional_methods_dir: 'C:/Users/Confocal/pulse_sequences'
        connect:
            pulsegenerator: 'pulsestreamer'
    pulsedmeasurementlogic:
        module.Class: 'pulsed.pulsed_measurement_logic.PulsedMeasurementLogic'
        raw_data_save_type: 'text'  # optional
        #additional_extraction_path: 'C:\\Custom_dir\\Methods'  # optional
        #additional_analysis_path: 'C:\\Custom_dir\\Methods'  # optional
        connect:
            fastcounter: 'fastcounter_NI'
            pulsegenerator: 'pulsestreamer'
            fitlogic: 'fitlogic'
            savelogic: 'savelogic'
            microwave: 'mw_source_smbv'
    pulsedmasterlogic:
        module.Class: 'pulsed.pulsed_master_logic.PulsedMasterLogic'
        connect:
            pulsedmeasurementlogic: 'pulsedmeasurementlogic'
            sequencegeneratorlogic: 'sequencegeneratorlogic'
    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    counter:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            # counter1: 'mydummycounter'  # this is connected to the dummy object
            counter1: 'nicard_6343'   # swap this line to use the NIcard object as counter
            savelogic: 'save'

    scanner:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
       #     #confocalscanner1: 'mydummyscanner'  # this is connected to the dummy object
            confocalscanner1: 'nicard_6343'   # swap this line to use the NIcard object as scanner
            savelogic: 'save'
    odmrlogic:
        module.Class: 'odmr_logic.ODMRLogic'
        connect:
            odmrcounter: 'nicard_6343'
            fitlogic: 'fit'
            microwave1: 'mw_source_smbv'
            savelogic: 'save'
            taskrunner: 'tasklogic'
        scanmode: 'SWEEP' #LIST,'warn','Sweep','scanmode','LIST'

    optimizer:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
         #confocalscanner1: 'mydummyscanner'  # this is connected to the dummy object
            confocalscanner1: 'nicard_6343'   # swap this line to use the NIcard object as scanner
            fitlogic: 'fit'

    #poimanager:
        #module.Class: 'poi_manager_logic.PoiManagerLogic'
        #connect:
           # scannerlogic: 'scanner'
           # optimizer1: 'optimizer'
          #  savelogic: 'save' 

    fit:
        module.Class: 'fit_logic.FitLogic'

    save:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: 'Data/'
        log_into_daily_directory: True
        save_pdf: True
        save_png: True
    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            dummytask:
                module: 'dummy'
                preposttasks: ['ppdummy']
            #scannerLocationRefocus:
                #module: 'refocus'
        #        preposttasks: ['fliplasermirror']
                #pausetasks: ['scan', 'odmr']
                #needsmodules:
                 #   optimizer: 'optimizer'
    camera_logic:
        module.Class: 'camera_logic.CameraLogic'
        connect:
            hardware: 'thorlabs_camera'
            savelogic: 'savelogic'        
    spectrumlogic:
        module.Class: 'spectrum.SpectrumLogic'
        connect:
            spectrometer: 'myspectrometer'
            savelogic: 'savelogic'
            odmrlogic: 'odmrlogic' # optional
            fitlogic: 'fitlogic'
    magnet_logic:
        module.Class: 'magnet_logic.MagnetLogic'
        connect:
            magnetstage: 'magnetdummy'
            optimizerlogic: 'optimizer'
            counterlogic: 'counter'
            odmrlogic: 'odmrlogic'
            savelogic: 'savelogic'
            scannerlogic: 'scanner'
            traceanalysis: 'trace_analysis_logic'
            gatedcounterlogic: 'gatedcounterlogic'
            sequencegeneratorlogic: 'sequencegeneratorlogic'
    trace_analysis_logic:
        module.Class: 'trace_analysis_logic.TraceAnalysisLogic'
        connect:
            counterlogic1: 'gatedcounterlogic'
            savelogic: 'savelogic'
            fitlogic: 'fitlogic'
    gatedcounterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'nicard_6343'
            savelogic: 'savelogic'
    nv_calculator_logic:
        module.Class: 'nv_calculator_logic.NVCalculatorLogic'
        connect:
            odmr: 'odmrlogic'
            pulsed: 'pulsedmeasurementlogic'
    confocallogiccomplex:
        module.Class: 'confocal_logic_complex.Confocallogiccomplex'
        connect:
            mw_source: 'smf100a'
            nicard: 'ni_card_acquisition'
            piezo: 'madcity_piezo'
            pulser: 'swabian_instrument'
            savelogic: 'savelogic'
            taskrunner: 'tasklogic'
gui:
    tray:
        module.Class: 'trayicon.TrayIcon'
    man:
        module.Class: 'manager.managergui.ManagerGui'

    countergui:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counter'
    time_series_gui:
        module.Class: 'time_series.time_series_gui.TimeSeriesGui'
        use_antialias: True  # optional, set to False if you encounter performance issues
        connect:
            _time_series_logic_con: time_series_reader_logic
    confocalgui:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scanner'
            savelogic: 'save'
            optimizerlogic1: 'optimizer'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02
    odmr:
        module.Class: 'odmr.odmrgui.ODMRGui'
        connect:
            odmrlogic1: 'odmrlogic'
            savelogic: 'save'
    pulsedmeasurement:
        module.Class: 'pulsed.pulsed_maingui.PulsedMeasurementGui'
        connect:
            pulsedmasterlogic: 'pulsedmasterlogic'
   # poimanagergui:
    #    module.Class: 'poimanager.poimangui.PoiManagerGui'
     #   connect:
      #      poimanagerlogic1: 'poimanager'
       #     confocallogic1: 'scanner'
    camera_gui:
        module.Class: 'camera.cameragui.CameraGUI'
        connect:
            camera_logic: 'camera_logic'
            savelogic: 'savelogic'
    spectrometer:
        module.Class: 'spectrometer.spectrometergui.SpectrometerGui'
        connect:
            spectrumlogic: 'spectrumlogic'
    nv_calculator_gui:
        module.Class: 'nv_calculator.nv_calculatorgui.NVCalculatorGui'
        connect:
            nv_calculatorlogic: 'nv_calculator_logic'
    magnet:
        module.Class: 'magnet.magnet_gui.MagnetGui'
        connect:
            magnetlogic1: 'magnet_logic'
            savelogic: 'savelogic'
    confocal_gui_complex:
        module.Class: 'confocal_gui.confocal_gui_complex.ConfocalComplexGUI'
        connect:
            confocallogic: 'confocallogiccomplex'
            confocallogic: 'confocallogiccomplex'

            savelogic: 'savelogic'